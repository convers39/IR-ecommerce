version: "3.8"

services:
  django:
    restart: always
    build:
      context: .
      dockerfile: ./dockerfile
    container_name: django
    command: gunicorn --workers=2 --bind=0.0.0.0:8000 --env DJANGO_SETTINGS_MODULE=core.settings.prod core.wsgi:application
    volumes:
      - .:/usr/src/app
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
    ports:
      - "8000:8000"
    env_file:
      - ./core/env/env.staging
    depends_on:
      - redis
  celery:
    restart: always
    build:
      context: .
      dockerfile: ./dockerfile
    container_name: celery
    entrypoint: /bin/sh
    command: ./docker.celery.sh
    volumes:
      - .:/usr/src/app
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
    env_file:
      - ./core/env/env.staging
    depends_on:
      - django
      - redis
  redis:
    restart: always
    image: redis:alpine
    container_name: redis
    volumes:
      - redisdata:/data
  nginx-proxy:
    container_name: nginx-proxy
    build: ./nginx
    restart: always
    ports:
      - 443:443
      - 80:80
    volumes:
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - django
  nginx-proxy-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt
    env_file:
      - ./core/env/env.staging.proxy-companion
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
    depends_on:
      - nginx-proxy
volumes:
  redisdata:
  static_volume:
  media_volume:
  certs:
  html:
  vhost:
